{"version":3,"sources":["constants.js","components/EditableText.js","components/PlayerSlider.js","util/shuffle.js","randomize.js","App.js","serviceWorker.js","index.js"],"names":["PRESET_PLAYERS","name","ratio","PLAYER_SLIDER_MARKS","value","label","EditableText","props","state","edit","editText","handleChange","bind","handleKeyDown","this","setState","text","e","target","key","onTextChange","type","onChange","onKeyDown","Typography","onDoubleClick","startEdit","variant","component","IconButton","onClick","edge","style","position","left","Edit","fontSize","React","Component","PlayerSlider","editRatio","val","Slider","marks","valueLabelDisplay","step","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","CORES_NEEDED","SUPPORTS_NEEDED","assignPlayerRoles","players","Error","cores","filter","p","supports","dividePlayersByRoles","corePlayers","supportPlayers","remainingPlayers","some","cp","sp","nCoresNeeded","nSupportsNeeded","forEach","i","rng","assignPlayersRng","player","push","App","teamA","teamB","nPlayers","Object","assign","index","console","log","findIndex","updatedPlayer","slice","concat","randomize","a","b","error","alert","playerSelect","map","Grid","item","Button","handleAddPlayer","disabled","checkIfPlaying","checkIfFull","selectedPlayers","sm","xs","Card","CardContent","Box","pb","container","justify","newName","handlePlayerNameChange","className","handleRemovePlayer","Close","px","handleChangeValue","matchup","mb","alignItems","Hidden","xsDown","align","smUp","Container","Fade","in","display","alignContent","spacing","data-content","handleClear","color","fullWidth","handleRoll","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a736cab.chunk.js","sourcesContent":["// App.js\nexport const PRESET_PLAYERS = [\n    {name: 'tsunilly', ratio: 0.5},\n    {name: 'Lomi', ratio: 1.0}, \n    {name: 'Dale', ratio: 0.2}, \n    {name: 'mowatchi', ratio: 1.0}, \n    {name: 'Lumpy Space Princess', ratio: 0.9}, \n    {name: 'Nori', ratio: 0.0}, \n    {name: 'Joy', ratio: 0.7}, \n    {name: 'Cat Bugs', ratio: 0.0}, \n    {name: 'T_T', ratio: 0.0},\n    {name: 'JonieEE', ratio: 0.5},\n    {name: 'Kebodo', ratio: 1.0},\n    {name: 'JK', ratio: 0.5},\n]\n\n// PlayerSlider.js\n\nexport const PLAYER_SLIDER_MARKS = [\n    {\n      value: 0,\n      label: 'Support'\n    },\n    {\n      value: 100,\n      label: 'Core'\n    }\n  ]\n  ","import React from 'react'\nimport { Typography, IconButton } from '@material-ui/core';\nimport { Edit } from '@material-ui/icons';\n\nclass EditableText extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {edit: false, editText: ''};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n    }\n\n    startEdit() {\n        this.setState({edit: true, editText: this.props.text});\n    }\n\n    handleChange(e) {\n        this.setState({editText: e.target.value})\n    }\n    handleKeyDown(e) {\n        if (e.key === 'Enter') {\n            this.props.onTextChange(e.target.value);\n            this.setState({edit: false});\n        }\n    }\n    \n    render() {\n        const {text, onTextChange, ...props} = this.props;\n        return (\n            <>\n                {this.state.edit &&\n                    <input type=\"text\" value={this.state.editText} onChange={this.handleChange} onKeyDown={this.handleKeyDown} />\n                }\n                {!this.state.edit  &&\n                    <Typography {...props} onDoubleClick={() => this.startEdit()}>\n                        {text}\n                        <Typography variant=\"subtitle1\" component=\"sup\">\n                            <IconButton onClick={() => this.startEdit()} edge=\"end\" style={{position: 'relative', left: -10}}>\n                                <Edit style={{fontSize: '0.9rem'}}/>\n                            </IconButton>\n                        </Typography>\n                    </Typography>\n                }\n            </>\n        )\n    }\n} \n\nexport default EditableText","import React from 'react'\nimport { Slider } from '@material-ui/core';\n\nimport { PLAYER_SLIDER_MARKS } from '../constants';\n\nclass PlayerSlider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {edit: false, editRatio: ''};\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(val) {\n        this.setState({editRatio: val})\n    }\n\n    render() {\n        return (\n            <Slider \n              value={this.props.ratio * 100}\n              marks={PLAYER_SLIDER_MARKS}\n              valueLabelDisplay=\"on\"\n              step={5}\n              onChange={(e, val) => this.props.handleChange(val)}\n            //   onChangeCommitted={(e,val) => this.handleChangeValue(player, val)}\n            />\n        )\n    }\n}\n\nexport default PlayerSlider","/**\n * Randomly shuffle an array\n * https://stackoverflow.com/a/2450976/1293256\n * @param  {Array} array The array to shuffle\n * @return {String}      The first item in the shuffled array\n */\nexport function shuffle (array) {\n\n\tvar currentIndex = array.length;\n\tvar temporaryValue, randomIndex;\n\n\t// While there remain elements to shuffle...\n\twhile (0 !== currentIndex) {\n\t\t// Pick a remaining element...\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\n\t\t// And swap it with the current element.\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n\n\treturn array;\n\n};","// Ported script.py\n// Assigns roles and randomizes a role-balanced team\n\nimport { shuffle } from './util/shuffle';\n\nconst CORES_NEEDED = 6;\nconst SUPPORTS_NEEDED = 4;\n\nfunction assignPlayerRoles(players) {\n    if (players.length !== 10) {\n        throw new Error('Must have only 10 players');\n    }\n\n    const [corePlayers, supportPlayers] = dividePlayersByRoles(players);\n\n    // Make sure all roles can be filled\n    if (!corePlayers.length >= CORES_NEEDED) {\n        throw new Error(`Not core players! ${corePlayers} found, ${CORES_NEEDED} needed`);\n    } else if (!supportPlayers.length >= SUPPORTS_NEEDED) {\n        throw new Error(`Not enough support players! ${supportPlayers} found, ${SUPPORTS_NEEDED} needed`);\n    }\n\n    // Assign players with fixed roles\n    const cores = corePlayers.filter(p => p.ratio === 1.0);\n    const supports = supportPlayers.filter(p => p.ratio === 0.0);\n    const remainingPlayers = players.filter(p => !cores.some(cp => cp.name === p.name) && !supports.some(sp => sp.name === p.name)); \n\n    let nCoresNeeded = CORES_NEEDED - cores.length;\n    let nSupportsNeeded = SUPPORTS_NEEDED - supports.length;\n\n    assignPlayersRng(remainingPlayers);\n    shuffle(remainingPlayers);\n\n    remainingPlayers.forEach((player, i) => {\n        let rngSaysCore = player['rng'] <= player['ratio'];\n\n        // core preferred\n        if (rngSaysCore) {\n            if (nCoresNeeded > 0) {\n                cores.push(player);\n                nCoresNeeded--;\n            } else {\n                supports.push(player);\n                nSupportsNeeded--;\n            }\n        } else { // support preferred\n            if (nSupportsNeeded > 0) {\n                supports.push(player);\n                nSupportsNeeded--;\n            } else {\n                cores.push(player);\n                nCoresNeeded--;\n            }\n        }\n    })\n    return [cores, supports]\n}\n\nfunction dividePlayersByRoles(players) {\n    // divide players into roles if they can play on it at any level\n    const cores = players.filter(p => p.ratio > 0.0);\n    const supports = players.filter(p => p.ratio < 1.0);\n    return [cores, supports]\n}\n \nfunction assignPlayersRng(players) {\n    players.forEach((p, i) => {\n        players[i].rng = Math.random();\n    });\n}\n\nexport function randomize(players) {\n    const [cores, supports] = assignPlayerRoles(players);\n    shuffle(cores);\n    shuffle(supports);\n    const teamA = cores.slice(0, 3).concat(supports.slice(0, 2));\n    const teamB = cores.slice(3).concat(supports.slice(2));\n    return [teamA, teamB];\n}","import React, { Component } from 'react';\nimport './App.css';\n\nimport { Container, Typography, Grid, Button, Card, CardContent, Box, IconButton, Fade, Hidden } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\n\nimport { PRESET_PLAYERS } from './constants';\nimport EditableText from './components/EditableText';\nimport PlayerSlider from './components/PlayerSlider';\nimport { randomize } from './randomize';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: [],//PRESET_PLAYERS,\n      teamA: [],\n      teamB: []\n    };\n  }\n\n  handleAddPlayer(player) {\n    let nPlayers = this.state['players'].length;\n    if (nPlayers < 10) {\n      if (typeof player == 'string' && player === 'new') {\n        \n        this.setState({players: [...this.state['players'], {name: `Player-${nPlayers}`, ratio: 0.5}]})\n      } else if (typeof player == 'object') {\n        this.setState({players: [...this.state['players'], Object.assign({}, player)]})\n      }\n    }\n  }\n\n  handleRemovePlayer(index) {\n    if (index <= this.state.players.length) {\n      this.setState({\n        players: this.state.players.filter((p, i) => i !== index),\n        teamA: [],\n        teamB: []\n      })\n    }\n  }\n\n  handlePlayerNameChange(player, value) {\n    console.log(player, value);\n    let index = this.state.players.findIndex(p => p['name'] === player['name']);\n    let updatedPlayer = this.state.players[index];\n    updatedPlayer['name'] = value;\n    this.setState({\n      players: [\n        ...this.state.players.slice(0, index),\n        updatedPlayer,\n        ...this.state.players.slice(index + 1)\n      ]\n    });\n    console.log(PRESET_PLAYERS)\n  }\n\n  handleChangeValue(player, value) {\n    let index = this.state.players.findIndex(p => p['name'] === player['name']);\n    let updatedPlayer = this.state.players[index];\n    updatedPlayer['ratio'] = value / 100;\n    this.setState({\n      players: [\n        ...this.state.players.slice(0, index),\n        updatedPlayer,\n        ...this.state.players.slice(index + 1)\n      ]\n    })\n  }\n\n  handleRoll() {\n    console.log('rolling', this.state.players);\n    try {\n      let [a,b] = randomize(this.state['players']);\n      this.setState({teamA: a, teamB: b});\n    } catch(error) {\n      alert(error);\n      console.error(error);\n    }\n  }\n\n  handleClear() {\n    this.setState({players: [], teamA: [], teamB: []});\n  }\n\n  checkIfPlaying(player) {\n    return this.state['players'].some(p => p['name'] === player['name']);\n  }\n\n  checkIfFull() {\n    return this.state['players'].length === 10;\n  }\n  checkIfNotFull() {\n    return this.state['players'].length < 10;\n  }\n\n  render() {\n    var playerSelect = PRESET_PLAYERS.map(player => \n      <Grid key={player['name']} item>\n        <Button variant=\"outlined\" \n          onClick={() => this.handleAddPlayer(player)}\n          disabled={this.checkIfPlaying(player) || this.checkIfFull()}\n        >\n          {player['name']}\n        </Button>\n      </Grid>\n    );\n\n    // .concat().sort((p1, p2) => p1['name']-p2['name']); // todo - sort\n    var selectedPlayers = this.state['players'].map((player, index) =>\n      <Grid key={index} item sm={6} xs={12}>\n        <Card>\n          {/* <CardHeader\n            title={player['name']}\n            action={\n              <IconButton onClick={() => this.handleRemovePlayer(index)}>\n                <Close />\n              </IconButton>\n            }\n          >\n          </CardHeader> */}\n          <CardContent>\n            <Box pb={2}>\n              <Grid container justify=\"space-between\">\n                <Grid item xs={11}>\n                  {/* <Typography variant=\"h5\">{player['name']}</Typography> */}\n                  <EditableText\n                    text={player['name']}\n                    onTextChange={(newName) => this.handlePlayerNameChange(player, newName)}\n                    variant=\"h5\"\n                  />\n                </Grid>\n                <Grid item xs={1}>\n                  <IconButton className=\"offset-y-10\" onClick={() => this.handleRemovePlayer(index)}>\n                    <Close />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Box>\n            \n            <Box px={2}>\n              <PlayerSlider \n                ratio={player['ratio']}\n                handleChange={(val) => this.handleChangeValue(player, val)}\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n\n    var teamA = this.state.teamA.map((p, i) => \n      <div key={i}>{p['name']}</div> \n    );\n    var teamB = this.state.teamB.map((p, i) => \n      <div key={i}>{p['name']}</div> \n    );\n    var matchup = (this.state.teamA.length === 5 && this.state.teamB.length === 5) ? (\n      <Box mb={3}>\n        <Grid container alignItems=\"center\" justify=\"center\">\n          <Hidden xsDown>\n            <Grid item sm={5}><Typography variant=\"h5\" align=\"right\">{teamA}</Typography></Grid>\n            <Grid item sm={2}><Typography variant=\"h2\" align=\"center\"> vs </Typography></Grid>\n            <Grid item sm={5}><Typography variant=\"h5\" align=\"left\">{teamB}</Typography></Grid>\n          </Hidden>\n\n          <Hidden smUp>\n            <Grid item xs={12}><Typography variant=\"h5\" align=\"left\">{teamA}</Typography></Grid>\n            <Grid item xs={12}><Typography variant=\"h2\" align=\"center\"> vs </Typography></Grid>\n            <Grid item xs={12}><Typography variant=\"h5\" align=\"right\">{teamB}</Typography></Grid>\n          </Hidden>\n        </Grid>\n\n      </Box>\n    ) : '';\n\n    return(\n      <Container>\n        <Typography align=\"center\" variant=\"h1\" className=\"hide\">DC: Civil War</Typography>     \n          <Fade in={!this.checkIfFull()}> \n            <Box display={this.checkIfFull() ? 'none' : '' }> {/* Hack-y way to hide in DOM w/ animation. Might be better to use plain CSS */}\n              <Box pb={2}>\n                <Typography variant=\"h5\">\n                  Select Players <Typography variant=\"subtitle1\" component=\"span\">({this.state.players.length}/10 Players Added)</Typography>\n                </Typography>\n              </Box>\n\n              <Grid container justify=\"center\" alignContent=\"space-around\" alignItems=\"stretch\" spacing={1}>\n                { playerSelect }\n              </Grid>\n              <hr className=\"hr-text\" data-content=\"OR\"/>\n              \n              <Box pb={2}>\n                <Grid container justify=\"center\">\n                  <Button \n                    variant=\"contained\" \n                    onClick={() => this.handleAddPlayer('new')}\n                    disabled={this.state['players'].length === 10}\n                  >\n                    Add a Custom Player\n                  </Button>\n                  <Button \n                    variant=\"outlined\" \n                    onClick={() => this.handleClear('new')}\n                  >\n                    Clear\n                  </Button>\n                </Grid>\n              </Box>\n            </Box>\n          </Fade>\n        \n        <Fade in={this.checkIfFull()}>\n            <Box pb={2}  display={this.checkIfFull() ? '' : 'none' }>\n              { matchup }\n              <Button \n                color=\"primary\"\n                variant=\"contained\"\n                fullWidth={true}\n                onClick={() => this.handleRoll()}\n              >\n                Roll Roles and Teams!\n              </Button>\n              <Button \n                color=\"secondary\"\n                variant=\"outlined\"\n                fullWidth={true}\n                onClick={() => this.handleClear()}\n              >\n                Clear\n              </Button>\n            </Box>\n        </Fade>\n\n        <Box pb={2}>\n          <Grid container alignContent=\"space-around\" spacing={2} pb={2}>\n            {selectedPlayers}\n          </Grid>\n        </Box>        \n  \n      </Container>\n\n    );\n  }\n}\n\n  \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}